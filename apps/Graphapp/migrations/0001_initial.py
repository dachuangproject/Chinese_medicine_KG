# Generated by Django 3.0 on 2020-05-01 06:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Herbsmol',
            fields=[
                ('herbsmol_no', models.CharField(db_column='herbsmol_No', max_length=10, primary_key=True, serialize=False)),
                ('herbs_name', models.CharField(blank=True, db_column='herbs_Name', max_length=255, null=True)),
                ('molecular_name', models.CharField(blank=True, db_column='molecularName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'herbsmol',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Illness',
            fields=[
                ('illness_no', models.CharField(db_column='illness_No', max_length=10, primary_key=True, serialize=False)),
                ('illness_name', models.CharField(blank=True, db_column='illness_Name', max_length=255, null=True)),
                ('ill_intro', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'illness',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MedMat',
            fields=[
                ('med_mat_no', models.CharField(db_column='med_mat_No', max_length=10, primary_key=True, serialize=False)),
                ('med_intro', models.CharField(blank=True, max_length=255, null=True)),
                ('med_mat_name', models.CharField(blank=True, db_column='med_mat_Name', max_length=255, null=True)),
                ('treatill', models.CharField(blank=True, max_length=255, null=True)),
                ('medclassify', models.IntegerField(blank=True, null=True)),
                ('taste', models.CharField(blank=True, max_length=255, null=True)),
                ('usdosage', models.CharField(blank=True, max_length=255, null=True)),
                ('plcha', models.CharField(blank=True, max_length=511, null=True)),
                ('plenvir', models.CharField(blank=True, max_length=255, null=True)),
                ('distribute', models.CharField(blank=True, max_length=255, null=True)),
                ('function', models.CharField(blank=True, db_column='functions', max_length=255, null=True)),
                ('machine', models.CharField(blank=True, max_length=255, null=True)),
                ('discuss', models.CharField(blank=True, max_length=255, null=True)),
                ('alias', models.CharField(blank=True, max_length=255, null=True)),
                ('plclassify', models.CharField(blank=True, max_length=255, null=True)),
                ('compa', models.CharField(blank=True, max_length=255, null=True)),
                ('pinyin', models.CharField(blank=True, max_length=255, null=True)),
                ('toxicity', models.CharField(blank=True, max_length=255, null=True)),
                ('attention', models.CharField(blank=True, max_length=511, null=True)),
                ('medfun', models.CharField(blank=True, max_length=255, null=True)),
                ('checom', models.CharField(blank=True, max_length=255, null=True)),
                ('pmethod', models.CharField(blank=True, max_length=255, null=True)),
                ('annotation', models.CharField(blank=True, max_length=255, null=True)),
                ('capplication', models.CharField(blank=True, max_length=255, null=True)),
                ('anicha', models.CharField(blank=True, max_length=255, null=True)),
                ('stomethod', models.CharField(blank=True, max_length=255, null=True)),
                ('growth', models.CharField(blank=True, max_length=255, null=True)),
                ('statement', models.CharField(blank=True, max_length=255, null=True)),
                ('cultech', models.CharField(blank=True, max_length=255, null=True)),
                ('modesofrepro', models.CharField(blank=True, max_length=255, null=True)),
                ('anikind', models.CharField(blank=True, max_length=255, null=True)),
                ('latin', models.CharField(blank=True, max_length=255, null=True)),
                ('bcpre', models.CharField(blank=True, max_length=511, null=True)),
                ('plregion', models.CharField(blank=True, max_length=255, null=True)),
                ('taboo', models.CharField(blank=True, max_length=255, null=True)),
                ('manmade', models.CharField(blank=True, max_length=255, null=True)),
                ('modresearch', models.CharField(blank=True, max_length=255, null=True)),
                ('resourcedis', models.CharField(blank=True, max_length=255, null=True)),
                ('mineralcha', models.CharField(blank=True, max_length=255, null=True)),
                ('mineralkind', models.CharField(blank=True, max_length=255, null=True)),
                ('mineralenvir', models.CharField(blank=True, max_length=255, null=True)),
                ('aniregion', models.CharField(blank=True, max_length=255, null=True)),
                ('mineralnat', models.CharField(blank=True, max_length=255, null=True)),
                ('mainkind', models.CharField(blank=True, max_length=255, null=True)),
                ('proarea', models.CharField(blank=True, max_length=255, null=True)),
                ('toxeffect', models.CharField(blank=True, max_length=255, null=True)),
                ('adverserea', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'med_mat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Molecule',
            fields=[
                ('molecule_no', models.CharField(db_column='molecule_No', max_length=10, primary_key=True, serialize=False)),
                ('molecule_name', models.CharField(blank=True, db_column='molecule_Name', max_length=255, null=True)),
                ('molecule_formula', models.CharField(blank=True, max_length=255, null=True)),
                ('ML', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('AlogP', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('Hdon', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('Hacc', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('OB', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('Caco', models.DecimalField(blank=True, db_column='Caco-2', decimal_places=2, max_digits=20, null=True)),
                ('BBB', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('DL', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('FASA', models.DecimalField(blank=True, db_column='FASA-', decimal_places=2, max_digits=20, null=True)),
                ('HL', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'molecule',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reccom',
            fields=[
                ('reccom_no', models.CharField(db_column='reccom_No', max_length=10, primary_key=True, serialize=False)),
                ('dosage1', models.CharField(blank=True, max_length=255, null=True)),
                ('dosage2', models.CharField(blank=True, max_length=255, null=True)),
                ('mark', models.CharField(blank=True, max_length=255, null=True)),
                ('recipe_no', models.CharField(blank=True, db_column='recipe_No', max_length=10, null=True)),
                ('med_mat_name', models.CharField(blank=True, db_column='med_mat Name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'reccom',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_no', models.CharField(db_column='recipe_No', max_length=10, primary_key=True, serialize=False)),
                ('recipe_name', models.CharField(blank=True, db_column='recipe_Name', max_length=255, null=True)),
                ('composition', models.CharField(blank=True, max_length=255, null=True)),
                ('provenance', models.CharField(blank=True, max_length=255, null=True)),
                ('zhuzhi', models.CharField(blank=True, max_length=255, null=True)),
                ('usage', models.CharField(blank=True, db_column='usages', max_length=255, null=True)),
                ('fufang', models.CharField(blank=True, max_length=255, null=True)),
                ('imliter', models.CharField(blank=True, max_length=511, null=True)),
                ('recfunction', models.CharField(blank=True, max_length=255, null=True)),
                ('fangyi', models.CharField(blank=True, max_length=511, null=True)),
                ('plusedreduced', models.CharField(blank=True, max_length=255, null=True)),
                ('recalias', models.CharField(blank=True, max_length=255, null=True)),
                ('cautioninuse', models.CharField(blank=True, max_length=255, null=True)),
                ('apply', models.CharField(blank=True, max_length=255, null=True)),
                ('for_in_verse', models.CharField(blank=True, max_length=255, null=True)),
                ('compatibilitycha', models.CharField(blank=True, max_length=255, null=True)),
                ('diffdiscuss', models.CharField(blank=True, max_length=255, null=True)),
                ('classify', models.CharField(blank=True, max_length=255, null=True)),
                ('identify', models.CharField(blank=True, max_length=511, null=True)),
                ('recmethod', models.CharField(blank=True, max_length=255, null=True)),
                ('interememory', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'recipe',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tamol',
            fields=[
                ('tgmol_no', models.CharField(db_column='tgmol_No', max_length=10, primary_key=True, serialize=False)),
                ('molecular_name', models.CharField(blank=True, db_column='molecularName', max_length=255, null=True)),
                ('tg_name', models.CharField(blank=True, db_column='tgName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tamol',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('symptom_no', models.CharField(db_column='symptom_No', max_length=10, primary_key=True, serialize=False)),
                ('symptom_name', models.CharField(blank=True, db_column='symptom_Name', max_length=255, null=True)),
                ('symptom_per', models.CharField(blank=True, max_length=255, null=True)),
                ('sym_med_no', models.CharField(blank=True, db_column='sym_med_No', max_length=10, null=True)),
                ('illness_no', models.ForeignKey(blank=True, db_column='illness_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.Illness')),
                ('recipe_no', models.ForeignKey(blank=True, db_column='recipe_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.Recipe')),
            ],
            options={
                'db_table': 'symptom',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Marker',
            fields=[
                ('marker_no', models.CharField(db_column='marker_No', max_length=10, primary_key=True, serialize=False)),
                ('marker_name', models.CharField(blank=True, db_column='marker_Name', max_length=255, null=True)),
                ('marker_cat', models.CharField(blank=True, max_length=255, null=True)),
                ('marker_intro', models.CharField(blank=True, max_length=255, null=True)),
                ('diseasesName', models.CharField(blank=True, max_length=255, null=True)),
                ('illness_no', models.ForeignKey(blank=True, db_column='illness_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.Illness')),
                ('med_mat_no', models.ForeignKey(blank=True, db_column='med_mat_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.MedMat')),
            ],
            options={
                'db_table': 'marker',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='illness',
            name='recipe_no',
            field=models.ForeignKey(blank=True, db_column='recipe_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.Recipe'),
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('gene_no', models.CharField(db_column='gene_No', max_length=10, primary_key=True, serialize=False)),
                ('gene_name', models.CharField(blank=True, db_column='gene_Name', max_length=255, null=True)),
                ('gene_cat', models.CharField(blank=True, max_length=255, null=True)),
                ('gene_alias', models.CharField(blank=True, max_length=255, null=True)),
                ('gene_intro', models.CharField(max_length=255)),
                ('ch_location', models.CharField(blank=True, max_length=255, null=True)),
                ('marker_no', models.ForeignKey(blank=True, db_column='marker_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.Marker')),
            ],
            options={
                'db_table': 'gene',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Efficacy',
            fields=[
                ('efficacy_no', models.CharField(db_column='efficacy_No', max_length=10, primary_key=True, serialize=False)),
                ('eff_name', models.CharField(blank=True, db_column='eff_Name', max_length=255, null=True)),
                ('eff_intro', models.CharField(blank=True, max_length=255, null=True)),
                ('med_mat_no', models.ForeignKey(blank=True, db_column='med_mat_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.MedMat')),
                ('recipe_no', models.ForeignKey(blank=True, db_column='recipe_No', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Graphapp.Recipe')),
            ],
            options={
                'db_table': 'efficacy',
                'managed': True,
            },
        ),
    ]
